services:
  db:
    image: timescale/timescaledb:2.18.1-pg16
    command: ${DATABASE_ARGS:-}
    restart: unless-stopped
    healthcheck:
      # Do not use pg_isready because it throws errors
      # See: https://github.com/peter-evans/docker-compose-healthcheck/issues/16#issuecomment-1402807860
      test:
        [
          "CMD-SHELL",
          "psql -h localhost -U $${POSTGRES_USER} -c select 1 -d $${POSTGRES_DB}",
        ]
      start_period: 10s
      interval: 10s
      retries: 10
    ports:
      - ${EXTERNAL_DATABASE_PORT:-5432}:5432
    environment:
      - POSTGRES_USER=${DATABASE_USERNAME:-postgres}
      - POSTGRES_DB=${DATABASE_DATABASE:-postgres}
  migration:
    build:
      context: ./server
    command: ["-m", "alembic", "upgrade", "head"]
    depends_on:
      db:
        restart: true
        condition: service_healthy
    environment:
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - DATABASE_DATABASE=${DATABASE_DATABASE:-postgres}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-postgres}
      - DATABASE_MEMORY_GB
  importer:
    build:
      context: ./server
    command: ["import.py", "--skip-migrations", "all"]
    depends_on:
      migration:
        restart: true
        condition: service_completed_successfully
    environment:
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - DATABASE_DATABASE=${DATABASE_DATABASE:-postgres}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-postgres}
      - IMPORT_START
  api:
    build:
      context: ./server
    command:
      [
        "-m",
        "gunicorn",
        "main:app",
        "--worker-class",
        "uvicorn.workers.UvicornWorker",
        "--bind",
        "0.0.0.0:8000",
      ]
    ports:
      - ${API_PORT:-8000}:8000
    depends_on:
      migration:
        restart: true
        condition: service_completed_successfully
    environment:
      - ONLY_API=true
      - DATABASE_HOST=${DATABASE_HOST:-db}
      - DATABASE_PORT=${DATABASE_PORT:-5432}
      - DATABASE_DATABASE=${DATABASE_DATABASE:-postgres}
      - DATABASE_USERNAME=${DATABASE_USERNAME:-postgres}
      - DATABASE_POOL_SIZE
      - FLUX_MAX_RESOLUTION
      - FLUX_QUERY_TIMEOUT
      - WEB_CONCURRENCY
  site:
    build:
      context: ./site
      args:
        - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://localhost:8000}
    ports:
      - ${SITE_PORT:-3000}:3000
    depends_on:
      - api
